// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

// API key credentials for the security protocol 'ApiKeyAuth'
type APIKeyAuthInput struct {
	APIKey *string `json:"apiKey"`
}

type MainAccessRecord struct {
	IP   *string `json:"ip"`
	Path *string `json:"path"`
	Time *string `json:"time"`
}

type MainAPIKeyBrief struct {
	ID         *int    `json:"id"`
	Key        *string `json:"key"`
	Privileged *bool   `json:"privileged"`
}

type MainAPIKeyDetail struct {
	Application *string `json:"application"`
	ID          *int    `json:"id"`
	IssueBy     *string `json:"issueBy"`
	Key         *string `json:"key"`
	Privileged  *bool   `json:"privileged"`
}

type MainAPIKeyUsage struct {
	Access []*MainAccessRecord `json:"access"`
	ID     *int                `json:"id"`
}

type MainChatbotConversationInput struct {
	Input *string `json:"input"`
	User  *string `json:"user"`
}

type MainChatbotReactResponse struct {
	Error           *string   `json:"error"`
	InvalidKeywords []*string `json:"invalidKeywords"`
	Keywords        []*string `json:"keywords"`
	Message         *string   `json:"message"`
	Next            *string   `json:"next"`
	Prompt          *string   `json:"prompt"`
}

type MainChatbotResetUserResponse struct {
	Message *string `json:"message"`
	User    *string `json:"user"`
}

type MainCurrencyConvert struct {
	Amount *float64 `json:"amount"`
	From   *string  `json:"from"`
	Result *float64 `json:"result"`
	To     *string  `json:"to"`
}

type MainCurrencyConvertInput struct {
	Amount *float64 `json:"amount"`
	From   *string  `json:"from"`
	Result *float64 `json:"result"`
	To     *string  `json:"to"`
}

type MainGenericResultResponse struct {
	Result *bool `json:"result"`
}

type MainGetRecentPBSDataResponse struct {
	Events []*MainSinglePBSEventInfo `json:"events"`
	ID     *string                   `json:"id"`
}

type MainGetServiceStatusByIDResponse struct {
	ID      *string `json:"id"`
	Message *string `json:"message"`
	Name    *string `json:"name"`
	Status  *string `json:"status"`
	Type    *string `json:"type"`
}

type MainIPNationCountriesBulkInput struct {
	IPAddrList []*string `json:"ipAddrList"`
}

type MainIPNationCountriesBulkResponse struct {
	IPAddrResult *string `json:"ipAddrResult"`
}

type MainIPNationMyIPResponse struct {
	Country       *string  `json:"country"`
	CountrySymbol *string  `json:"countrySymbol"`
	IPAddr        *string  `json:"ipAddr"`
	Lat           *float64 `json:"lat"`
	Lon           *float64 `json:"lon"`
}

type MainIssueAPIKeyPayloadInput struct {
	Application     *string `json:"application"`
	UseInHeader     *bool   `json:"useInHeader"`
	UseInQueryParam *bool   `json:"useInQueryParam"`
}

type MainIssueAPIKeyResponse struct {
	Key *string `json:"key"`
}

type MainPingResponse struct {
	BuildTimestamp *int    `json:"buildTimestamp"`
	Hostname       *string `json:"hostname"`
	ImageTag       *string `json:"imageTag"`
	JenkinsURL     *string `json:"jenkinsUrl"`
	Message        *string `json:"message"`
	Time           *string `json:"time"`
	Timezone       *string `json:"timezone"`
}

type MainSinglePBSEventInfo struct {
	Message *string `json:"message"`
	Time    *string `json:"time"`
}

type MainTransformArticleRequestInput struct {
	BytesPerLine *int    `json:"bytesPerLine"`
	Text         *string `json:"text"`
}

type MainTransformArticleResponse struct {
	Text *string `json:"text"`
}

// Warning: Not every request will work with this viewer type
type MutationViewerAnyAuth struct {
	// Reset user status to initial
	//
	// Equivalent to DELETE /chatbot/{user}
	DeleteChatbotUser *MainChatbotResetUserResponse `json:"deleteChatbotUser"`
	// Issue an API Key to user, this endpoint requires privileges
	//
	// Equivalent to POST /apiKey
	PostAPIKey *MainIssueAPIKeyResponse `json:"postApiKey"`
	// Main Chatter interface for ChatBot
	//
	// Equivalent to POST /chatbot
	PostChatbot *MainChatbotReactResponse `json:"postChatbot"`
	// Look up in database, find which nation belongs to an IP
	//
	// Equivalent to POST /ip2nation/bulk
	PostIP2nationBulk *MainIPNationCountriesBulkResponse `json:"postIp2nationBulk"`
}

// A viewer for security scheme 'ApiKeyAuth'
type MutationViewerAPIKey struct {
	// Reset user status to initial
	//
	// Equivalent to DELETE /chatbot/{user}
	DeleteChatbotUser *MainChatbotResetUserResponse `json:"deleteChatbotUser"`
	// Issue an API Key to user, this endpoint requires privileges
	//
	// Equivalent to POST /apiKey
	PostAPIKey *MainIssueAPIKeyResponse `json:"postApiKey"`
	// Main Chatter interface for ChatBot
	//
	// Equivalent to POST /chatbot
	PostChatbot *MainChatbotReactResponse `json:"postChatbot"`
	// Look up in database, find which nation belongs to an IP
	//
	// Equivalent to POST /ip2nation/bulk
	PostIP2nationBulk *MainIPNationCountriesBulkResponse `json:"postIp2nationBulk"`
}

// Warning: Not every request will work with this viewer type
type ViewerAnyAuth struct {
	// Get current api keys
	//
	// Equivalent to GET /apiKey
	APIKey []*MainAPIKeyBrief `json:"apiKey"`
	// Get most recent raw data fetching from fixer.io
	//
	// Equivalent to GET /currency
	Currency *string `json:"currency"`
	// Get destinated API Key detail
	//
	// Equivalent to GET /apiKey/{id}
	MainAPIKeyDetail *MainAPIKeyDetail `json:"mainApiKeyDetail"`
	// Get API Usages, can pass timestamp into thee
	//
	// Equivalent to GET /apiKey/{id}/usage
	MainAPIKeyUsage *MainAPIKeyUsage `json:"mainApiKeyUsage"`
	// Sync server cache with Fixer.io with most recent raw data
	//
	// Equivalent to GET /currency/sync
	MainGenericResultResponse *MainGenericResultResponse `json:"mainGenericResultResponse"`
	// Look up in database, find which nation belongs to an IP
	//
	// Equivalent to GET /ip2nation
	MainIPNationCountries *string `json:"mainIpNationCountries"`
}

// A viewer for security scheme 'ApiKeyAuth'
type ViewerAPIKey struct {
	// Get current api keys
	//
	// Equivalent to GET /apiKey
	APIKey []*MainAPIKeyBrief `json:"apiKey"`
	// Get most recent raw data fetching from fixer.io
	//
	// Equivalent to GET /currency
	Currency *string `json:"currency"`
	// Get destinated API Key detail
	//
	// Equivalent to GET /apiKey/{id}
	MainAPIKeyDetail *MainAPIKeyDetail `json:"mainApiKeyDetail"`
	// Get API Usages, can pass timestamp into thee
	//
	// Equivalent to GET /apiKey/{id}/usage
	MainAPIKeyUsage *MainAPIKeyUsage `json:"mainApiKeyUsage"`
	// Sync server cache with Fixer.io with most recent raw data
	//
	// Equivalent to GET /currency/sync
	MainGenericResultResponse *MainGenericResultResponse `json:"mainGenericResultResponse"`
	// Look up in database, find which nation belongs to an IP
	//
	// Equivalent to GET /ip2nation
	MainIPNationCountries *string `json:"mainIpNationCountries"`
}
